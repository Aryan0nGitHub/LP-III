import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

df = pd.read_csv("sales_data_sample.csv")
df = df.dropna()
X = df[['Sales', 'Profit', 'Quantity']]

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

inertia = []
for k in range(1, 11):
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(X_scaled)
    inertia.append(kmeans.inertia_)

plt.figure(figsize=(8, 6))
plt.plot(range(1, 11), inertia, marker='o')
plt.title('Elbow Method for Optimal k')
plt.xlabel('Number of Clusters (k)')
plt.ylabel('Inertia')
plt.show()

kmeans_optimal = KMeans(n_clusters=3, random_state=42)
df['Cluster'] = kmeans_optimal.fit_predict(X_scaled)

plt.figure(figsize=(8, 6))
plt.scatter(df['Sales'], df['Profit'], c=df['Cluster'], cmap='viridis')
plt.title('K-Means Clusters (Sales vs Profit)')
plt.xlabel('Sales')
plt.ylabel('Profit')
plt.show()
